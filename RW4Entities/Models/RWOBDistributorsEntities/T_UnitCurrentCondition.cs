// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace RW4Entities.Models.RWOBDistributorsEntities;

[Index("UnitMasterID", Name = "UQ_T_UNitCurrentCondition_UnitMasterID", IsUnique = true)]
public partial class T_UnitCurrentCondition
{
    [Key]
    public long UnitCurrentConditionID { get; set; }

    public long UnitMasterID { get; set; }

    [Required]
    [StringLength(20)]
    [Unicode(false)]
    public string UnitNumber { get; set; }

    public long? GensetMasterID { get; set; }

    [StringLength(20)]
    [Unicode(false)]
    public string GensetNumber { get; set; }

    public long PreNoteId { get; set; }

    [Required]
    [StringLength(20)]
    [Unicode(false)]
    public string PreNoteNbr { get; set; }

    [StringLength(1)]
    [Unicode(false)]
    public string PreNoteTypeCd { get; set; }

    [StringLength(250)]
    [Unicode(false)]
    public string FORefNbr { get; set; }

    public long? PreNoteUnitID { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? ETSDtTm { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? ETCDtTm { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? InspAtOriginDtTm { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? InspAtDestDtTm { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? ArrivedAtOriginDtTm { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? ArrivedATDestDtTm { get; set; }

    public long UnitEventID { get; set; }

    public long? POIID { get; set; }

    public bool IsActiveHotSheets { get; set; }

    public bool IsActiveAlerts { get; set; }

    public bool IsCarbCompliant { get; set; }

    public bool IsDwellingAtOrigin { get; set; }

    public bool IsDwellingAtDest { get; set; }

    public int? DwellgHrs { get; set; }

    public bool IsMissingInspection { get; set; }

    public bool IsNotReporting { get; set; }

    public long C_SourceCompanyID { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime C_EventDtTm { get; set; }

    public long C_EventMasterID { get; set; }

    [Required]
    [StringLength(50)]
    [Unicode(false)]
    public string C_CompanyName { get; set; }

    [Required]
    [StringLength(12)]
    [Unicode(false)]
    public string C_CompanyCd { get; set; }

    [StringLength(30)]
    [Unicode(false)]
    public string C_FacilityNm { get; set; }

    [StringLength(12)]
    [Unicode(false)]
    public string C_FacilityCd { get; set; }

    [StringLength(12)]
    [Unicode(false)]
    public string C_SPLCCd { get; set; }

    [StringLength(25)]
    [Unicode(false)]
    public string C_City { get; set; }

    [StringLength(30)]
    [Unicode(false)]
    public string C_State { get; set; }

    public Guid UnitConditionLogIdentifier { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime CreatedDtTm { get; set; }

    public long CreatedBy { get; set; }

    [Required]
    [StringLength(1)]
    [Unicode(false)]
    public string C_SourceTypeCd { get; set; }

    [Column(TypeName = "decimal(10, 6)")]
    public decimal? C_Latitude { get; set; }

    [Column(TypeName = "decimal(10, 6)")]
    public decimal? C_Longitude { get; set; }

    public bool IsPendingActions { get; set; }

    [StringLength(20)]
    [Unicode(false)]
    public string RouteCd { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? IssuedDtTm { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? DepartedAtOriginDtTm { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? DepartedATDestDtTm { get; set; }

    [StringLength(1)]
    [Unicode(false)]
    public string UnitTrasitionStateCd { get; set; }

    public long? SOSvcLogId { get; set; }

    public int? QuadrantNumber { get; set; }

    [ForeignKey("C_EventMasterID")]
    [InverseProperty("T_UnitCurrentCondition")]
    public virtual R_EventMaster C_EventMaster { get; set; }

    [ForeignKey("PreNoteId")]
    [InverseProperty("T_UnitCurrentCondition")]
    public virtual T_PreNotes PreNote { get; set; }

    [ForeignKey("PreNoteUnitID")]
    [InverseProperty("T_UnitCurrentCondition")]
    public virtual T_PreNoteUnits PreNoteUnit { get; set; }

    [ForeignKey("UnitEventID")]
    [InverseProperty("T_UnitCurrentCondition")]
    public virtual T_UnitEvents UnitEvent { get; set; }

    [ForeignKey("UnitMasterID")]
    [InverseProperty("T_UnitCurrentCondition")]
    public virtual R_UnitMaster UnitMaster { get; set; }
}