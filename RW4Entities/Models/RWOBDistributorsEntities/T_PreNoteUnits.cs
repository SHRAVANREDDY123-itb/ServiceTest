// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace RW4Entities.Models.RWOBDistributorsEntities;

public partial class T_PreNoteUnits
{
    [Key]
    public long PreNoteUnitId { get; set; }

    public long PreNoteId { get; set; }

    public long UnitMasterId { get; set; }

    public long? GensetMasterId { get; set; }

    [StringLength(50)]
    [Unicode(false)]
    public string Commodity { get; set; }

    public double? SetTemp { get; set; }

    [StringLength(1)]
    [Unicode(false)]
    public string TempUOM { get; set; }

    public double? MinSetTemp { get; set; }

    public double? MaxSetTemp { get; set; }

    [Required]
    [StringLength(3)]
    [Unicode(false)]
    public string PreNoteUnitStatusCd { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime CreatedDtTm { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime ModifiedDtTm { get; set; }

    public long CreatedBy { get; set; }

    public long ModifiedBy { get; set; }

    [StringLength(3)]
    [Unicode(false)]
    public string CycleCd { get; set; }

    [Required]
    public byte[] VerNbr { get; set; }

    public bool IsError { get; set; }

    [StringLength(15)]
    [Unicode(false)]
    public string VentSettings { get; set; }

    [StringLength(10)]
    [Unicode(false)]
    public string STTCCd { get; set; }

    [ForeignKey("PreNoteId")]
    [InverseProperty("T_PreNoteUnits")]
    public virtual T_PreNotes PreNote { get; set; }

    [InverseProperty("PreNoteUnit")]
    public virtual ICollection<T_PreNoteUnitEvents> T_PreNoteUnitEvents { get; set; } = new List<T_PreNoteUnitEvents>();

    [InverseProperty("PreNoteUnit")]
    public virtual ICollection<T_RailincCERLog> T_RailincCERLog { get; set; } = new List<T_RailincCERLog>();

    [InverseProperty("PreNoteUnit")]
    public virtual ICollection<T_UnitCurrentCondition> T_UnitCurrentCondition { get; set; } = new List<T_UnitCurrentCondition>();

    [ForeignKey("UnitMasterId")]
    [InverseProperty("T_PreNoteUnits")]
    public virtual R_UnitMaster UnitMaster { get; set; }
}